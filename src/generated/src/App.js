// Generated by Melange

import * as Caml_array from "melange.js/caml_array.js";
import * as Curry from "melange.js/curry.js";
import * as React from "react";
import * as JsxRuntime from "react/jsx-runtime";

function make(q) {
  return function (id) {
    return JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("span", {
                        children: q,
                        className: ""
                      }),
                  JsxRuntime.jsx("input", {
                        name: id,
                        placeholder: "your answer..."
                      })
                ],
                className: ""
              });
  };
}

function App$Question(Props) {
  return make(Props.q)(Props.id);
}

const Question = {
  make: App$Question,
  $$default: App$Question
};

function App$NotRunning(Props) {
  return JsxRuntime.jsx("div", {
              children: "No active questions",
              className: "text-white"
            });
}

const NotRunning = {
  make: App$NotRunning
};

function App$Done(Props) {
  return JsxRuntime.jsx("div", {
              children: "You are so good at answering",
              className: "text-white"
            });
}

const Done = {
  make: App$Done
};

function make$1(question) {
  return function (setIdx) {
    return JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsxs("div", {
                        children: [
                          JsxRuntime.jsx("span", {
                                children: "Question: ",
                                className: "text-white"
                              }),
                          JsxRuntime.jsx("span", {
                                children: question,
                                className: "text-white"
                              })
                        ],
                        className: "question"
                      }),
                  JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx("input", {
                              name: "answer",
                              placeholder: "rizz me daddy",
                              type: "text"
                            }),
                        className: "answer"
                      }),
                  JsxRuntime.jsx("button", {
                        children: "Next",
                        className: "text-white",
                        onClick: (function (evt) {
                            Curry._1(setIdx, (function (v) {
                                    console.log([
                                          "v",
                                          v
                                        ]);
                                    return v + 1 | 0;
                                  }));
                          })
                      })
                ],
                className: ""
              });
  };
}

function App$Questionaire(Props) {
  return make$1(Props.question)(Props.setIdx);
}

const Questionaire = {
  make: App$Questionaire
};

function App$App(Props) {
  let state = Props.state;
  const match = React.useState(function () {
        return state.currentIdx;
      });
  if (!state.running) {
    return JsxRuntime.jsx(App$NotRunning, {});
  }
  const idx = match[0];
  if (idx < state.questions.length) {
    return JsxRuntime.jsx(App$Questionaire, {
                question: Caml_array.get(state.questions, idx),
                setIdx: match[1]
              });
  } else {
    return JsxRuntime.jsx(App$Done, {});
  }
}

const App = {
  make: App$App,
  $$default: App$App
};

const $$default = App$App;

export {
  Question ,
  NotRunning ,
  Done ,
  Questionaire ,
  App ,
  $$default as default,
}
/* react Not a pure module */
